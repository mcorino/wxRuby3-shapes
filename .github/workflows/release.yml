# CI wxRuby release workflow
name: Release build

on:
  push:
    tags:
      - v*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            ruby: '3.2'
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} wxRuby3/Shapes Release (${{ github.ref_name }})
    env:
      GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
    outputs:
      version: ${{ steps.version_var.outputs.WXSHAPES_VERSION }}
      prerelease: ${{ steps.version_var.outputs.WXSHAPES_PRERELEASE }}
    steps:
    - name: Checkout wxRuby3Shapes
      uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - name: Setup Ruby gems
      run: |
        bundle config set --local without wxruby
        bundle install

    - name: Build wxRuby3Shapes gem
      run: |
        bundle exec rake gem

    - name: Upload gem to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: pkg/*.gem
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

    - name: Publish Gem on RubyGems
      run: |
        gem push pkg/*.gem 

    - name: Set version variables
      id: version_var
      run: |
        echo "WXSHAPES_VERSION=${GITHUB_REF_NAME/#v/}" >> "$GITHUB_OUTPUT"
        if grep -q "\-[a-zA-Z]" <<< "$GITHUB_REF_NAME" ; then
          echo "WXSHAPES_PRERELEASE=1" >> "$GITHUB_OUTPUT"
        else
          echo "WXSHAPES_PRERELEASE=0" >> "$GITHUB_OUTPUT"
        fi

  verify-gem:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            gtk_version: 3
            CC: gcc-12
            CXX: g++-12
            ruby: '3.2'
            wxWidgets: '3.2.2.1'
            swig: '4'
            configure_flags:
            use_xvfb: true
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} wxRuby3/Shapes Gem Test (${{ github.ref_name }})
    env:
      WXWIDGETS_ROOT: ${{ github.workspace }}/ext/wxWidgets
      WXWIN_INSTALL: ${{ github.workspace }}/ext/wxWidgets/install
      wxGTK_VERSION: ${{ matrix.gtk_version && matrix.gtk_version || 3 }}
      wxCONFIGURE_FLAGS: ${{ matrix.configure_flags }}
      wxUSE_ASAN: ${{ matrix.use_asan && 1 || 0 }}
      wxUSE_XVFB: ${{ matrix.use_xvfb && 1 || 0 }}
      WX_EXTRA_PACKAGES: doxygen patchelf
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      WXSHAPES_VERSION: ${{ needs.release.outputs.version }}
      WXSHAPES_PRERELEASE: ${{ needs.release.outputs.prerelease }}
    steps:
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: checkout wxWidgets
        uses: actions/checkout@v4
        with:
          repository: wxWidgets/wxWidgets
          path: ${{ env.WXWIDGETS_ROOT }}
          ref: v${{ matrix.wxWidgets }}
          submodules: 'recursive'

      - name: Set up build environment
        run: |
          # Install locales used by our tests to run all the tests instead of
          # skipping them.
          sudo locale-gen de_DE.utf8 de_CH.utf8 en_US.utf8 fr_FR.utf8 sv_SE.utf8
          
          $WXWIDGETS_ROOT/build/tools/before_install.sh

      - name: Display build environment
        run: |
          echo $PATH
          ruby -v
          doxygen -v
          gcc -v
          g++ -v

      - name: Configuring wxWidgets
        run: |
          wxCONFIGURE_OPTIONS="$wxCONFIGURE_FLAGS"
          if [ -n "${{ matrix.gtk_version }}" ]; then
            wxCONFIGURE_OPTIONS="--with-gtk=${{ matrix.gtk_version }} $wxCONFIGURE_OPTIONS"
          fi
          pushd $WXWIDGETS_ROOT
          ./configure $wxCONFIGURE_OPTIONS --disable-tests --without-subdirs --disable-debug_info || rc=$?
          popd
          if [ -n "$rc" ]; then
            echo '*** Configuring failed, contents of config.log follows: ***'
            echo '-----------------------------------------------------------'
            cat $WXWIDGETS_ROOT/config.log
            echo '-----------------------------------------------------------'
            exit $rc
          fi

      - name: Build and install wxWidgets
        run: |
          pushd $WXWIDGETS_ROOT
          make && sudo make install && sudo ldconfig
          popd

      - name: Remove wxWidgets
        run: |
          rm -rf $WXWIDGETS_ROOT

      - name: Install wxRuby3/Shapes gem
        run: |
          if [ "$WXSHAPES_PRERELEASE" == "1" ]; then
            BUILD_CMD="gem install wxruby3-shapes -v $WXSHAPES_VERSION --pre"
          else
            BUILD_CMD="gem install wxruby3-shapes -v $WXSHAPES_VERSION"
          fi
          /bin/bash -o pipefail -c "xvfb-run -a -s '-screen 0 1600x1200x24' $BUILD_CMD 2>&1 | tee -a gembuild.out" || rc=$?
          if [ -n "$rc" ]; then
            if fgrep -q '(core dumped)' gembuild.out; then
              echo '*** Test crashed, trying to get more information ***'
              gdb --quiet --core=core -ex 'where' -ex 'thread apply all bt' -ex 'q' --args $BUILD_CMD
            fi
            exit $rc
          fi

      - name: Run wxRuby3/Shapes regression tests
        run: |
          ulimit -c unlimited
          TEST_CMD="wx-shapes test"
          /bin/bash -o pipefail -c "xvfb-run -a -s '-screen 0 1600x1200x24' $TEST_CMD 2>&1 | tee -a wxtest.out" || rc=$?
          if [ -n "$rc" ]; then
            if fgrep -q '(core dumped)' wxtest.out; then
              echo '*** Test crashed, trying to get more information ***'
              gdb --quiet --core=core -ex 'where' -ex 'thread apply all bt' -ex 'q' --args $TEST_CMD
            fi
            exit $rc
          fi

  verify-gem-msw:
    needs: [release]
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} wxRuby/Shapes Gem Test (${{ github.ref_name }})
    env:
      WXSHAPES_VERSION: ${{ needs.release.outputs.version }}
      WXSHAPES_PRERELEASE: ${{ needs.release.outputs.prerelease }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            platform: 'x64'
            CXX: g++-12
            ruby: '3.2'
            wxWidgets: '3.2.2.1'
            swig: '4'

    steps:
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Wait for RubyGems
        run: |
          Start-Sleep -Seconds 300

      - name: Install wxRuby3/Shapes gem
        run: |
          If ("$env:WXSHAPES_PRERELEASE" -eq "1") {
            gem install wxruby3-shapes -v $env:WXSHAPES_VERSION --pre
          }
          Else {
            gem install wxruby3-shapes -v $env:WXSHAPES_VERSION
          }

      - name: Run wxRuby3/Shapes regression tests
        run: |
          wx-shapes test
