# CI wxRuby release workflow
name: Release build

on:
  push:
    tags:
      - v*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            ruby: 'system'
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} wxRuby3/Shapes Release (${{ github.ref_name }})
    env:
      GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
    outputs:
      version: ${{ steps.version_var.outputs.WXSHAPES_VERSION }}
      prerelease: ${{ steps.version_var.outputs.WXSHAPES_PRERELEASE }}
    steps:
    - name: Checkout wxRuby3Shapes
      uses: actions/checkout@v4

    - name: Prepare package repos
      run: |
        sudo apt-get update

    - name: Install packages
      run: |
        sudo apt-get install -y ruby-bundler

    - name: Setup Ruby gems
      run: |
        bundle config set --local without wxruby
        bundle install

    - name: Build wxRuby3Shapes gem
      run: |
        bundle exec rake gem

    - name: Upload gem to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: pkg/*.gem
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

    - name: Publish Gem on RubyGems
      run: |
        gem push pkg/*.gem 

    - name: Set version variables
      id: version_var
      run: |
        echo "WXSHAPES_VERSION=${GITHUB_REF_NAME/#v/}" >> "$GITHUB_OUTPUT"
        if grep -q "\-[a-zA-Z]" <<< "$GITHUB_REF_NAME" ; then
          echo "WXSHAPES_PRERELEASE=1" >> "$GITHUB_OUTPUT"
        else
          echo "WXSHAPES_PRERELEASE=0" >> "$GITHUB_OUTPUT"
        fi

  verify-gem:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            gtk_version: 3
            arch: x86_64
            ruby: 'system'
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} wxRuby3/Shapes Gem Test (${{ github.ref_name }})
    env:
      WXSHAPES_VERSION: ${{ needs.release.outputs.version }}
      WXSHAPES_PRERELEASE: ${{ needs.release.outputs.prerelease }}
    steps:
      - name: Prepare package repos
        run: |
          sudo apt-get update

      - name: Install packages
        run: |
          sudo apt-get install -y xvfb xfonts-75dpi ruby-bundler
          case ${{ matrix.os }} in
          ubuntu-24.04)
            sudo apt-get install -y 'libgtk-3-[0-9]+' 'libwebkit2gtk-4.1-[0-9]+' 'libgspell-1-[0-9]+' libnotify4 'libsecret-1-[0-9]+'
            ;;
          *)
            sudo apt-get install -y 'libgtk-3-[0-9]+' 'libwebkit2gtk-4.0-[0-9]+' 'libgspell-1-[0-9]+' libnotify4 'libsecret-1-[0-9]+'
            ;;
          esac

      - name: Display build environment
        run: |
          echo $PATH
          uname -a
          ruby -v

      - name: Wait for RubyGems
        run: |
          sleep 180

      - name: Install wxRuby3/Shapes gem
        run: |
          if [ "$WXSHAPES_PRERELEASE" == "1" ]; then
            BUILD_CMD="gem install wxruby3-shapes -v $WXSHAPES_VERSION --pre"
          else
            BUILD_CMD="gem install wxruby3-shapes -v $WXSHAPES_VERSION"
          fi
          /bin/bash -o pipefail -c "xvfb-run -a -s '-screen 0 1600x1200x24' $BUILD_CMD 2>&1 | tee -a gembuild.out" || rc=$?
          if [ -n "$rc" ]; then
            if fgrep -q '(core dumped)' gembuild.out; then
              echo '*** Test crashed, trying to get more information ***'
              gdb --quiet --core=core -ex 'where' -ex 'thread apply all bt' -ex 'q' --args $BUILD_CMD
            fi
            exit $rc
          fi

      - name: Run wxRuby3/Shapes regression tests
        run: |
          ulimit -c unlimited
          TEST_CMD="wx-shapes test"
          /bin/bash -o pipefail -c "xvfb-run -a -s '-screen 0 1600x1200x24' $TEST_CMD 2>&1 | tee -a wxtest.out" || rc=$?
          if [ -n "$rc" ]; then
            if fgrep -q '(core dumped)' wxtest.out; then
              echo '*** Test crashed, trying to get more information ***'
              gdb --quiet --core=core -ex 'where' -ex 'thread apply all bt' -ex 'q' --args $TEST_CMD
            fi
            exit $rc
          fi

  verify-gem-msw:
    needs: [release]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            platform: 'x64'
            ruby: 'ruby'
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} wxRuby/Shapes Gem Test (${{ github.ref_name }})
    env:
      WXSHAPES_VERSION: ${{ needs.release.outputs.version }}
      WXSHAPES_PRERELEASE: ${{ needs.release.outputs.prerelease }}

    steps:
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Wait for RubyGems
        run: |
          Start-Sleep -Seconds 180

      - name: Install wxRuby3/Shapes gem
        run: |
          If ("$env:WXSHAPES_PRERELEASE" -eq "1") {
            gem install wxruby3-shapes -v $env:WXSHAPES_VERSION --pre
          }
          Else {
            gem install wxruby3-shapes -v $env:WXSHAPES_VERSION
          }

      - name: Run wxRuby3/Shapes regression tests
        run: |
          wx-shapes test

  verify-gem-osx:
    needs: [release]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: aarch64
            ruby: 'ruby'
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} wxRuby/Shapes Gem Test (${{ github.ref_name }})
    env:
      WXSHAPES_VERSION: ${{ needs.release.outputs.version }}
      WXSHAPES_PRERELEASE: ${{ needs.release.outputs.prerelease }}

    steps:
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Wait for RubyGems
        run: |
          sleep 180

      - name: Install wxRuby3/Shapes gem
        run: |
          if [ "$WXSHAPES_PRERELEASE" == "1" ]; then
            gem install wxruby3-shapes -v $WXSHAPES_VERSION --pre
          else
            gem install wxruby3-shapes -v $WXSHAPES_VERSION
          fi

      - name: Run wxRuby3/Shapes regression tests
        run: |
          wx-shapes test
